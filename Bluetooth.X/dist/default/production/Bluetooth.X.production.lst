

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 23 22:06:14 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  001A                     _RCREG	set	26
   168  0065                     _RCIF	set	101
   169  00C4                     _CREN	set	196
   170  005F                     _GIE	set	95
   171  005E                     _PEIE	set	94
   172  00C7                     _SPEN	set	199
   173  0030                     _RB0	set	48
   174  0099                     _SPBRG	set	153
   175  0465                     _RCIE	set	1125
   176  043F                     _TRISC7	set	1087
   177  043E                     _TRISC6	set	1086
   178  04C4                     _SYNC	set	1220
   179  04C2                     _BRGH	set	1218
   180  0430                     _TRISB0	set	1072
   181                           
   182                           ; #config settings
   183  0000                     
   184                           	psect	cinit
   185  000F                     start_initialization:	
   186  000F                     __initialization:	
   187                           
   188                           ; Clear objects allocated to COMMON
   189  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   190  0010                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193  0010                     __end_of__initialization:	
   194  0010  0183               	clrf	3
   195  0011  120A  118A  2848   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198  0073                     __pbssCOMMON:	
   199  0073                     _UART_Buffer:	
   200  0073                     	ds	1
   201                           
   202                           	psect	cstackCOMMON
   203  0070                     __pcstackCOMMON:	
   204  0070                     ?_UART_RX_Init:	
   205  0070                     ?_main:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ?_ISR:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0070                     ??_ISR:	
   212                           ; 1 bytes @ 0x0
   213                           
   214                           
   215                           ; 1 bytes @ 0x0
   216  0070                     	ds	3
   217  0073                     ??_UART_RX_Init:	
   218  0073                     ??_main:	
   219                           ; 1 bytes @ 0x3
   220                           
   221                           
   222                           	psect	maintext
   223  0048                     __pmaintext:	
   224                           ; 1 bytes @ 0x3
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 19 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2, status,0, pclath, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : B00/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   244 ;;      Params:         0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels required when called:    2
   250 ;; This function calls:
   251 ;;		_UART_RX_Init
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           
   258                           ;psect for function _main
   259  0048                     _main:	
   260  0048                     l663:	
   261                           ;incstack = 0
   262                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   263                           
   264                           
   265                           ;main.c: 20:     UART_RX_Init();
   266  0048  120A  118A  2034  120A  118A  	fcall	_UART_RX_Init
   267  004D                     l665:	
   268                           
   269                           ;main.c: 21:     TRISB0 =0;
   270  004D  1683               	bsf	3,5	;RP0=1, select bank1
   271  004E  1303               	bcf	3,6	;RP1=0, select bank1
   272  004F  1006               	bcf	6,0	;volatile
   273  0050                     l667:	
   274                           
   275                           ;main.c: 22:     RB0 =0;
   276  0050  1283               	bcf	3,5	;RP0=0, select bank0
   277  0051  1303               	bcf	3,6	;RP1=0, select bank0
   278  0052  1006               	bcf	6,0	;volatile
   279  0053                     l37:	
   280                           ;main.c: 23:     while(1){
   281                           
   282  0053                     l38:	
   283                           ;main.c: 25:     }
   284                           
   285  0053  2853               	goto	l37
   286  0054  120A  118A  280C   	ljmp	start
   287  0057                     __end_of_main:	
   288                           
   289                           	psect	text1
   290  0034                     __ptext1:	
   291 ;; *************** function _UART_RX_Init *****************
   292 ;; Defined at:
   293 ;;		line 29 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _UART_RX_Init
   323  0034                     _UART_RX_Init:	
   324  0034                     l643:	
   325                           ;incstack = 0
   326                           ; Regs used in _UART_RX_Init: [wreg]
   327                           
   328                           
   329                           ;main.c: 30:    BRGH = 1;
   330  0034  1683               	bsf	3,5	;RP0=1, select bank1
   331  0035  1303               	bcf	3,6	;RP1=0, select bank1
   332  0036  1518               	bsf	24,2	;volatile
   333  0037                     l645:	
   334                           
   335                           ;main.c: 31:    SPBRG = 25;
   336  0037  3019               	movlw	25
   337  0038  0099               	movwf	25	;volatile
   338  0039                     l647:	
   339                           
   340                           ;main.c: 33:    SYNC = 0;
   341  0039  1218               	bcf	24,4	;volatile
   342  003A                     l649:	
   343                           
   344                           ;main.c: 34:    SPEN = 1;
   345  003A  1283               	bcf	3,5	;RP0=0, select bank0
   346  003B  1303               	bcf	3,6	;RP1=0, select bank0
   347  003C  1798               	bsf	24,7	;volatile
   348  003D                     l651:	
   349                           
   350                           ;main.c: 36:   TRISC6 = 1;
   351  003D  1683               	bsf	3,5	;RP0=1, select bank1
   352  003E  1303               	bcf	3,6	;RP1=0, select bank1
   353  003F  1707               	bsf	7,6	;volatile
   354  0040                     l653:	
   355                           
   356                           ;main.c: 37:   TRISC7 = 1;
   357  0040  1787               	bsf	7,7	;volatile
   358  0041                     l655:	
   359                           
   360                           ;main.c: 39:   RCIE = 1;
   361  0041  168C               	bsf	12,5	;volatile
   362  0042                     l657:	
   363                           
   364                           ;main.c: 40:   PEIE = 1;
   365  0042  170B               	bsf	11,6	;volatile
   366  0043                     l659:	
   367                           
   368                           ;main.c: 41:   GIE = 1;
   369  0043  178B               	bsf	11,7	;volatile
   370  0044                     l661:	
   371                           
   372                           ;main.c: 43:   CREN = 1;
   373  0044  1283               	bcf	3,5	;RP0=0, select bank0
   374  0045  1303               	bcf	3,6	;RP1=0, select bank0
   375  0046  1618               	bsf	24,4	;volatile
   376  0047                     l43:	
   377  0047  0008               	return
   378  0048                     __end_of_UART_RX_Init:	
   379                           
   380                           	psect	text2
   381  0014                     __ptext2:	
   382 ;; *************** function _ISR *****************
   383 ;; Defined at:
   384 ;;		line 46 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          3       0       0       0       0
   401 ;;      Totals:         3       0       0       0       0
   402 ;;Total ram usage:        3 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		Interrupt level 1
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _ISR
   413  0014                     _ISR:	
   414  0014                     i1l669:	
   415                           
   416                           ;main.c: 47:      if (RCIF == 1) {
   417  0014  1283               	bcf	3,5	;RP0=0, select bank0
   418  0015  1303               	bcf	3,6	;RP1=0, select bank0
   419  0016  1E8C               	btfss	12,5	;volatile
   420  0017  2819               	goto	u1_21
   421  0018  281A               	goto	u1_20
   422  0019                     u1_21:	
   423  0019  282D               	goto	i1l51
   424  001A                     u1_20:	
   425  001A                     i1l671:	
   426                           
   427                           ;main.c: 48:     UART_Buffer = RCREG;
   428  001A  081A               	movf	26,w	;volatile
   429  001B  00F0               	movwf	??_ISR
   430  001C  0870               	movf	??_ISR,w
   431  001D  00F3               	movwf	_UART_Buffer
   432  001E                     i1l673:	
   433                           
   434                           ;main.c: 51:     if(UART_Buffer == 49)
   435  001E  3031               	movlw	49
   436  001F  0673               	xorwf	_UART_Buffer,w
   437  0020  1D03               	btfss	3,2
   438  0021  2823               	goto	u2_21
   439  0022  2824               	goto	u2_20
   440  0023                     u2_21:	
   441  0023  2825               	goto	i1l677
   442  0024                     u2_20:	
   443  0024                     i1l675:	
   444                           
   445                           ;main.c: 52:         RB0=1;
   446  0024  1406               	bsf	6,0	;volatile
   447  0025                     i1l677:	
   448                           
   449                           ;main.c: 53:     if(UART_Buffer == 50)
   450  0025  3032               	movlw	50
   451  0026  0673               	xorwf	_UART_Buffer,w
   452  0027  1D03               	btfss	3,2
   453  0028  282A               	goto	u3_21
   454  0029  282B               	goto	u3_20
   455  002A                     u3_21:	
   456  002A  282C               	goto	i1l50
   457  002B                     u3_20:	
   458  002B                     i1l679:	
   459                           
   460                           ;main.c: 54:         RB0=0;
   461  002B  1006               	bcf	6,0	;volatile
   462  002C                     i1l50:	
   463                           
   464                           ;main.c: 55:     RCIF = 0;
   465  002C  128C               	bcf	12,5	;volatile
   466  002D                     i1l51:	
   467  002D  0872               	movf	??_ISR+2,w
   468  002E  008A               	movwf	10
   469  002F  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   470  0030  0083               	movwf	3
   471  0031  0EFE               	swapf	btemp,f
   472  0032  0E7E               	swapf	btemp,w
   473  0033  0009               	retfie
   474  0034                     __end_of_ISR:	
   475  007E                     btemp	set	126	;btemp
   476  007E                     wtemp0	set	126
   477                           
   478                           	psect	intentry
   479  0004                     __pintentry:	
   480                           ;incstack = 0
   481                           ; Regs used in _ISR: [wreg+status,2+status,0]
   482                           
   483  0004                     interrupt_function:	
   484  007E                     saved_w	set	btemp
   485  0004  00FE               	movwf	btemp
   486  0005  0E03               	swapf	3,w
   487  0006  00F1               	movwf	??_ISR+1
   488  0007  080A               	movf	10,w
   489  0008  00F2               	movwf	??_ISR+2
   490  0009  120A  118A  2814   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _UART_RX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_RX_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 23 22:06:14 2019

            __CFG_CP$OFF 0000                       l43 0047                       l37 0053  
                     l38 0053                      l651 003D                      l643 0034  
                    l661 0044                      l653 0040                      l645 0037  
                    l655 0041                      l647 0039                      l663 0048  
                    l657 0042                      l649 003A                      l665 004D  
                    l659 0043                      l667 0050                      _GIE 005F  
                    _RB0 0030             __CFG_CPD$OFF 0000                      _ISR 0014  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   _BRGH 04C2                     _CREN 00C4                     _PEIE 005E  
                   i1l50 002C                     i1l51 002D                     _RCIE 0465  
                   _RCIF 0065                     _SPEN 00C7                     _SYNC 04C4  
                   u1_20 001A                     u1_21 0019                     u2_20 0024  
                   u2_21 0023                     u3_20 002B                     u3_21 002A  
           __CFG_WRT$OFF 0000                     _main 0048                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 000C                    ??_ISR 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l671 001A  
                  i1l673 001E                    i1l675 0024                    i1l677 0025  
                  i1l669 0014                    i1l679 002B                    _RCREG 001A  
                  _SPBRG 0099            __CFG_PWRTE$ON 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0057                   ??_main 0073                   _TRISB0 0430  
                 _TRISC6 043E                   _TRISC7 043F                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070               __pmaintext 0048  
             __pintentry 0004            ?_UART_RX_Init 0070                  __ptext1 0034  
                __ptext2 0014             __size_of_ISR 0020           ??_UART_RX_Init 0073  
   end_of_initialization 0010      start_initialization 000F              __end_of_ISR 0034  
   __end_of_UART_RX_Init 0048              __pbssCOMMON 0073                ___latbits 0002  
      interrupt_function 0004    __size_of_UART_RX_Init 0014             _UART_RX_Init 0034  
          __size_of_main 000F                 intlevel1 0000              _UART_Buffer 0073  
