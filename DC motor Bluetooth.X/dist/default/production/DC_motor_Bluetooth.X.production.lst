

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Oct 29 20:32:36 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  001A                     _RCREG	set	26
   169  0015                     _CCPR1L	set	21
   170  0065                     _RCIF	set	101
   171  00C4                     _CREN	set	196
   172  005F                     _GIE	set	95
   173  005E                     _PEIE	set	94
   174  00C7                     _SPEN	set	199
   175  00BD                     _CCP1X	set	189
   176  00BC                     _CCP1Y	set	188
   177  0092                     _TMR2ON	set	146
   178  0091                     _T2CKPS1	set	145
   179  0090                     _T2CKPS0	set	144
   180  00BA                     _CCP1M2	set	186
   181  00BB                     _CCP1M3	set	187
   182  0041                     _RD1	set	65
   183  0040                     _RD0	set	64
   184  0099                     _SPBRG	set	153
   185  0092                     _PR2	set	146
   186  0465                     _RCIE	set	1125
   187  043F                     _TRISC7	set	1087
   188  043E                     _TRISC6	set	1086
   189  04C4                     _SYNC	set	1220
   190  04C2                     _BRGH	set	1218
   191  043A                     _TRISC2	set	1082
   192  0441                     _TRISD1	set	1089
   193  0440                     _TRISD0	set	1088
   194                           
   195                           ; #config settings
   196  0000                     
   197                           	psect	cinit
   198  000F                     start_initialization:	
   199  000F                     __initialization:	
   200                           
   201                           ; Clear objects allocated to COMMON
   202  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   203  0010                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206  0010                     __end_of__initialization:	
   207  0010  0183               	clrf	3
   208  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMMON
   211  0079                     __pbssCOMMON:	
   212  0079                     _UART_Buffer:	
   213  0079                     	ds	1
   214                           
   215                           	psect	cstackCOMMON
   216  0070                     __pcstackCOMMON:	
   217  0070                     ?_UART_RX_Init:	
   218  0070                     ?_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ?_ISR:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ??_ISR:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           ; 1 bytes @ 0x0
   229  0070                     	ds	3
   230  0073                     ??_UART_RX_Init:	
   231  0073                     ?_PWM1_Set_Duty:	
   232                           ; 1 bytes @ 0x3
   233                           
   234  0073                     PWM1_Set_Duty@DC:	
   235                           ; 1 bytes @ 0x3
   236                           
   237                           
   238                           ; 2 bytes @ 0x3
   239  0073                     	ds	2
   240  0075                     ??_PWM1_Set_Duty:	
   241                           
   242                           ; 1 bytes @ 0x5
   243  0075                     	ds	2
   244  0077                     ??_main:	
   245                           
   246                           ; 1 bytes @ 0x7
   247  0077                     	ds	2
   248                           
   249                           	psect	maintext
   250  0014                     __pmaintext:	
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 24 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0, pclath, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : B00/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0
   272 ;;      Temps:          2       0       0       0       0
   273 ;;      Totals:         2       0       0       0       0
   274 ;;Total ram usage:        2 bytes
   275 ;; Hardware stack levels required when called:    2
   276 ;; This function calls:
   277 ;;		_PWM1_Set_Duty
   278 ;;		_UART_RX_Init
   279 ;; This function is called by:
   280 ;;		Startup code after reset
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           
   285                           ;psect for function _main
   286  0014                     _main:	
   287  0014                     l762:	
   288                           ;incstack = 0
   289                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   290                           
   291                           
   292                           ;main.c: 26:     UART_RX_Init();
   293  0014  120A  118A  20A6  120A  118A  	fcall	_UART_RX_Init
   294  0019                     l764:	
   295                           
   296                           ;main.c: 30:   TRISD0 = 0;
   297  0019  1683               	bsf	3,5	;RP0=1, select bank1
   298  001A  1303               	bcf	3,6	;RP1=0, select bank1
   299  001B  1008               	bcf	8,0	;volatile
   300  001C                     l766:	
   301                           
   302                           ;main.c: 31:   TRISD1 = 0;
   303  001C  1088               	bcf	8,1	;volatile
   304  001D                     l768:	
   305                           
   306                           ;main.c: 34:   RD0 = 0;
   307  001D  1283               	bcf	3,5	;RP0=0, select bank0
   308  001E  1303               	bcf	3,6	;RP1=0, select bank0
   309  001F  1008               	bcf	8,0	;volatile
   310  0020                     l770:	
   311                           
   312                           ;main.c: 35:   RD1 = 1;
   313  0020  1488               	bsf	8,1	;volatile
   314  0021                     l772:	
   315                           
   316                           ;main.c: 38:   CCP1M3 = 1;
   317  0021  1597               	bsf	23,3	;volatile
   318  0022                     l774:	
   319                           
   320                           ;main.c: 39:   CCP1M2 = 1;
   321  0022  1517               	bsf	23,2	;volatile
   322  0023                     l776:	
   323                           
   324                           ;main.c: 40:   TRISC2 = 0;
   325  0023  1683               	bsf	3,5	;RP0=1, select bank1
   326  0024  1303               	bcf	3,6	;RP1=0, select bank1
   327  0025  1107               	bcf	7,2	;volatile
   328  0026                     l778:	
   329                           
   330                           ;main.c: 42:   PR2 = 124;
   331  0026  307C               	movlw	124
   332  0027  0092               	movwf	18	;volatile
   333  0028                     l780:	
   334                           
   335                           ;main.c: 44:   T2CKPS0 = 1;
   336  0028  1283               	bcf	3,5	;RP0=0, select bank0
   337  0029  1303               	bcf	3,6	;RP1=0, select bank0
   338  002A  1412               	bsf	18,0	;volatile
   339  002B                     l782:	
   340                           
   341                           ;main.c: 45:   T2CKPS1 = 0;
   342  002B  1092               	bcf	18,1	;volatile
   343  002C                     l784:	
   344                           
   345                           ;main.c: 47:   TMR2ON = 1;
   346  002C  1512               	bsf	18,2	;volatile
   347  002D                     l786:	
   348                           
   349                           ;main.c: 51:   {;main.c: 52:     if(UART_Buffer == 49)
   350  002D  3031               	movlw	49
   351  002E  0679               	xorwf	_UART_Buffer,w
   352  002F  1D03               	btfss	3,2
   353  0030  2832               	goto	u131
   354  0031  2833               	goto	u130
   355  0032                     u131:	
   356  0032  283D               	goto	l790
   357  0033                     u130:	
   358  0033                     l788:	
   359                           
   360                           ;main.c: 53:     {;main.c: 54:       RD0 = ~RD0;
   361  0033  3001               	movlw	1
   362  0034  1283               	bcf	3,5	;RP0=0, select bank0
   363  0035  1303               	bcf	3,6	;RP1=0, select bank0
   364  0036  0688               	xorwf	8,f
   365                           
   366                           ;main.c: 55:       RD1 = ~RD1;
   367  0037  3002               	movlw	2
   368  0038  0688               	xorwf	8,f
   369                           
   370                           ;main.c: 56:       UART_Buffer = 51 ;
   371  0039  3033               	movlw	51
   372  003A  00F7               	movwf	??_main
   373  003B  0877               	movf	??_main,w
   374  003C  00F9               	movwf	_UART_Buffer
   375  003D                     l790:	
   376                           
   377                           ;main.c: 58:     if(UART_Buffer == 50)
   378  003D  3032               	movlw	50
   379  003E  0679               	xorwf	_UART_Buffer,w
   380  003F  1D03               	btfss	3,2
   381  0040  2842               	goto	u141
   382  0041  2843               	goto	u140
   383  0042                     u141:	
   384  0042  284B               	goto	l794
   385  0043                     u140:	
   386  0043                     l792:	
   387                           
   388                           ;main.c: 59:     {;main.c: 60:       PWM1_Set_Duty(0);
   389  0043  3000               	movlw	0
   390  0044  00F3               	movwf	PWM1_Set_Duty@DC
   391  0045  00F4               	movwf	PWM1_Set_Duty@DC+1
   392  0046  120A  118A  2085  120A  118A  	fcall	_PWM1_Set_Duty
   393  004B                     l794:	
   394                           
   395                           ;main.c: 62:     if(UART_Buffer == 51)
   396  004B  3033               	movlw	51
   397  004C  0679               	xorwf	_UART_Buffer,w
   398  004D  1D03               	btfss	3,2
   399  004E  2850               	goto	u151
   400  004F  2851               	goto	u150
   401  0050                     u151:	
   402  0050  285A               	goto	l798
   403  0051                     u150:	
   404  0051                     l796:	
   405                           
   406                           ;main.c: 63:     {;main.c: 64:       PWM1_Set_Duty(250);
   407  0051  30FA               	movlw	250
   408  0052  00F3               	movwf	PWM1_Set_Duty@DC
   409  0053  3000               	movlw	0
   410  0054  00F4               	movwf	PWM1_Set_Duty@DC+1
   411  0055  120A  118A  2085  120A  118A  	fcall	_PWM1_Set_Duty
   412  005A                     l798:	
   413                           
   414                           ;main.c: 66:     if(UART_Buffer == 52)
   415  005A  3034               	movlw	52
   416  005B  0679               	xorwf	_UART_Buffer,w
   417  005C  1D03               	btfss	3,2
   418  005D  285F               	goto	u161
   419  005E  2860               	goto	u160
   420  005F                     u161:	
   421  005F  2869               	goto	l802
   422  0060                     u160:	
   423  0060                     l800:	
   424                           
   425                           ;main.c: 67:     {;main.c: 68:       PWM1_Set_Duty(375);
   426  0060  3077               	movlw	119
   427  0061  00F3               	movwf	PWM1_Set_Duty@DC
   428  0062  3001               	movlw	1
   429  0063  00F4               	movwf	PWM1_Set_Duty@DC+1
   430  0064  120A  118A  2085  120A  118A  	fcall	_PWM1_Set_Duty
   431  0069                     l802:	
   432                           
   433                           ;main.c: 70:     if (UART_Buffer == 53)
   434  0069  3035               	movlw	53
   435  006A  0679               	xorwf	_UART_Buffer,w
   436  006B  1D03               	btfss	3,2
   437  006C  286E               	goto	u171
   438  006D  286F               	goto	u170
   439  006E                     u171:	
   440  006E  2878               	goto	l806
   441  006F                     u170:	
   442  006F                     l804:	
   443                           
   444                           ;main.c: 71:     {;main.c: 72:       PWM1_Set_Duty(500);
   445  006F  30F4               	movlw	244
   446  0070  00F3               	movwf	PWM1_Set_Duty@DC
   447  0071  3001               	movlw	1
   448  0072  00F4               	movwf	PWM1_Set_Duty@DC+1
   449  0073  120A  118A  2085  120A  118A  	fcall	_PWM1_Set_Duty
   450  0078                     l806:	
   451                           
   452                           ;main.c: 74:     _delay((unsigned long)((10)*(4000000/4000.0)));
   453  0078  300D               	movlw	13
   454  0079  00F8               	movwf	??_main+1
   455  007A  30FB               	movlw	251
   456  007B  00F7               	movwf	??_main
   457  007C                     u187:	
   458  007C  0BF7               	decfsz	??_main,f
   459  007D  287C               	goto	u187
   460  007E  0BF8               	decfsz	??_main+1,f
   461  007F  287C               	goto	u187
   462  0080  2881               	nop2
   463  0081  282D               	goto	l786
   464  0082  120A  118A  280C   	ljmp	start
   465  0085                     __end_of_main:	
   466                           
   467                           	psect	text1
   468  00A6                     __ptext1:	
   469 ;; *************** function _UART_RX_Init *****************
   470 ;; Defined at:
   471 ;;		line 91 in file "main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _UART_RX_Init
   501  00A6                     _UART_RX_Init:	
   502  00A6                     l678:	
   503                           ;incstack = 0
   504                           ; Regs used in _UART_RX_Init: [wreg]
   505                           
   506                           
   507                           ;main.c: 92:    BRGH = 1;
   508  00A6  1683               	bsf	3,5	;RP0=1, select bank1
   509  00A7  1303               	bcf	3,6	;RP1=0, select bank1
   510  00A8  1518               	bsf	24,2	;volatile
   511  00A9                     l680:	
   512                           
   513                           ;main.c: 93:    SPBRG = 25;
   514  00A9  3019               	movlw	25
   515  00AA  0099               	movwf	25	;volatile
   516  00AB                     l682:	
   517                           
   518                           ;main.c: 95:    SYNC = 0;
   519  00AB  1218               	bcf	24,4	;volatile
   520  00AC                     l684:	
   521                           
   522                           ;main.c: 96:    SPEN = 1;
   523  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   524  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   525  00AE  1798               	bsf	24,7	;volatile
   526  00AF                     l686:	
   527                           
   528                           ;main.c: 98:   TRISC6 = 1;
   529  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   530  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   531  00B1  1707               	bsf	7,6	;volatile
   532  00B2                     l688:	
   533                           
   534                           ;main.c: 99:   TRISC7 = 1;
   535  00B2  1787               	bsf	7,7	;volatile
   536  00B3                     l690:	
   537                           
   538                           ;main.c: 101:   RCIE = 1;
   539  00B3  168C               	bsf	12,5	;volatile
   540  00B4                     l692:	
   541                           
   542                           ;main.c: 102:   PEIE = 1;
   543  00B4  170B               	bsf	11,6	;volatile
   544  00B5                     l694:	
   545                           
   546                           ;main.c: 103:   GIE = 1;
   547  00B5  178B               	bsf	11,7	;volatile
   548  00B6                     l696:	
   549                           
   550                           ;main.c: 105:   CREN = 1;
   551  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   552  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   553  00B8  1618               	bsf	24,4	;volatile
   554  00B9                     l80:	
   555  00B9  0008               	return
   556  00BA                     __end_of_UART_RX_Init:	
   557                           
   558                           	psect	text2
   559  0085                     __ptext2:	
   560 ;; *************** function _PWM1_Set_Duty *****************
   561 ;; Defined at:
   562 ;;		line 80 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  DC              2    3[COMMON] unsigned int 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         2       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          2       0       0       0       0
   579 ;;      Totals:         4       0       0       0       0
   580 ;;Total ram usage:        4 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    1
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _PWM1_Set_Duty
   592  0085                     _PWM1_Set_Duty:	
   593  0085                     l756:	
   594                           ;incstack = 0
   595                           ; Regs used in _PWM1_Set_Duty: [wreg+status,2+status,0]
   596                           
   597                           
   598                           ;main.c: 80: void PWM1_Set_Duty(uint16_t DC);main.c: 81: {;main.c: 83:   if(DC<1024)
   599  0085  3004               	movlw	4
   600  0086  0274               	subwf	PWM1_Set_Duty@DC+1,w
   601  0087  3000               	movlw	0
   602  0088  1903               	skipnz
   603  0089  0273               	subwf	PWM1_Set_Duty@DC,w
   604  008A  1803               	skipnc
   605  008B  288D               	goto	u101
   606  008C  288E               	goto	u100
   607  008D                     u101:	
   608  008D  28A5               	goto	l77
   609  008E                     u100:	
   610  008E                     l758:	
   611                           
   612                           ;main.c: 84:   {;main.c: 85:     CCP1Y = DC & 1;
   613  008E  1873               	btfsc	PWM1_Set_Duty@DC,0
   614  008F  2891               	goto	u111
   615  0090  2895               	goto	u110
   616  0091                     u111:	
   617  0091  1283               	bcf	3,5	;RP0=0, select bank0
   618  0092  1303               	bcf	3,6	;RP1=0, select bank0
   619  0093  1617               	bsf	23,4	;volatile
   620  0094  2898               	goto	u124
   621  0095                     u110:	
   622  0095  1283               	bcf	3,5	;RP0=0, select bank0
   623  0096  1303               	bcf	3,6	;RP1=0, select bank0
   624  0097  1217               	bcf	23,4	;volatile
   625  0098                     u124:	
   626                           
   627                           ;main.c: 86:     CCP1X = DC & 2;
   628  0098  1297               	bcf	23,5	;volatile
   629  0099                     l760:	
   630                           
   631                           ;main.c: 87:     CCPR1L = DC >> 2;
   632  0099  0874               	movf	PWM1_Set_Duty@DC+1,w
   633  009A  00F6               	movwf	??_PWM1_Set_Duty+1
   634  009B  0873               	movf	PWM1_Set_Duty@DC,w
   635  009C  00F5               	movwf	??_PWM1_Set_Duty
   636  009D  1003               	clrc
   637  009E  0CF6               	rrf	??_PWM1_Set_Duty+1,f
   638  009F  0CF5               	rrf	??_PWM1_Set_Duty,f
   639  00A0  1003               	clrc
   640  00A1  0CF6               	rrf	??_PWM1_Set_Duty+1,f
   641  00A2  0CF5               	rrf	??_PWM1_Set_Duty,f
   642  00A3  0875               	movf	??_PWM1_Set_Duty,w
   643  00A4  0095               	movwf	21	;volatile
   644  00A5                     l77:	
   645  00A5  0008               	return
   646  00A6                     __end_of_PWM1_Set_Duty:	
   647                           
   648                           	psect	text3
   649  00BA                     __ptext3:	
   650 ;; *************** function _ISR *****************
   651 ;; Defined at:
   652 ;;		line 108 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          3       0       0       0       0
   669 ;;      Totals:         3       0       0       0       0
   670 ;;Total ram usage:        3 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		Interrupt level 1
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _ISR
   681  00BA                     _ISR:	
   682  00BA                     i1l750:	
   683                           
   684                           ;main.c: 109:      if (RCIF == 1) {
   685  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   686  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   687  00BC  1E8C               	btfss	12,5	;volatile
   688  00BD  28BF               	goto	u9_21
   689  00BE  28C0               	goto	u9_20
   690  00BF                     u9_21:	
   691  00BF  28C5               	goto	i1l86
   692  00C0                     u9_20:	
   693  00C0                     i1l752:	
   694                           
   695                           ;main.c: 110:     UART_Buffer = RCREG;
   696  00C0  081A               	movf	26,w	;volatile
   697  00C1  00F0               	movwf	??_ISR
   698  00C2  0870               	movf	??_ISR,w
   699  00C3  00F9               	movwf	_UART_Buffer
   700  00C4                     i1l754:	
   701                           
   702                           ;main.c: 111:     RCIF = 0;
   703  00C4  128C               	bcf	12,5	;volatile
   704  00C5                     i1l86:	
   705  00C5  0872               	movf	??_ISR+2,w
   706  00C6  008A               	movwf	10
   707  00C7  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   708  00C8  0083               	movwf	3
   709  00C9  0EFE               	swapf	btemp,f
   710  00CA  0E7E               	swapf	btemp,w
   711  00CB  0009               	retfie
   712  00CC                     __end_of_ISR:	
   713  007E                     btemp	set	126	;btemp
   714  007E                     wtemp0	set	126
   715                           
   716                           	psect	intentry
   717  0004                     __pintentry:	
   718                           ;incstack = 0
   719                           ; Regs used in _ISR: [wreg]
   720                           
   721  0004                     interrupt_function:	
   722  007E                     saved_w	set	btemp
   723  0004  00FE               	movwf	btemp
   724  0005  0E03               	swapf	3,w
   725  0006  00F1               	movwf	??_ISR+1
   726  0007  080A               	movf	10,w
   727  0008  00F2               	movwf	??_ISR+2
   728  0009  120A  118A  28BA   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Set_Duty

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     370
                                              7 COMMON     2     2      0
                      _PWM1_Set_Duty
                       _UART_RX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        4     2      2     370
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Set_Duty
   _UART_RX_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Oct 29 20:32:36 2019

            __CFG_CP$OFF 0000                       l80 00B9                       l77 00A5  
                    l800 0060                      l802 0069                      l804 006F  
                    l806 0078                      l760 0099                      l680 00A9  
                    l690 00B3                      l682 00AB                      l770 0020  
                    l762 0014                      l756 0085                      l692 00B4  
                    l684 00AC                      l780 0028                      l772 0021  
                    l764 0019                      l758 008E                      l694 00B5  
                    l686 00AF                      l678 00A6                      l790 003D  
                    l782 002B                      l774 0022                      l766 001C  
                    l696 00B6                      l688 00B2                      l792 0043  
                    l784 002C                      l776 0023                      l768 001D  
                    l794 004B                      l786 002D                      l778 0026  
                    l796 0051                      l788 0033                      l798 005A  
                    _GIE 005F                      _RD0 0040                      _RD1 0041  
                    u100 008E                      u101 008D                      u110 0095  
                    u111 0091                      u130 0033                      u131 0032  
                    u124 0098                      u140 0043                      u141 0042  
                    u150 0051                      u151 0050                      u160 0060  
                    u161 005F                      u170 006F                      u171 006E  
                    _PR2 0092             __CFG_CPD$OFF 0000                      u187 007C  
                    _ISR 00BA             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     _BRGH 04C2                     _CREN 00C4  
                   _PEIE 005E                     _RCIE 0465                     _RCIF 0065  
                   i1l86 00C5                     _SPEN 00C7                     _SYNC 04C4  
                   u9_20 00C0                     u9_21 00BF             __CFG_WRT$OFF 0000  
                   _main 0014                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _CCP1X 00BD                    _CCP1Y 00BC            __CFG_WDTE$OFF 0000  
                  i1l750 00BA                    i1l752 00C0                    i1l754 00C4  
                  _RCREG 001A                    _SPBRG 0099            __CFG_PWRTE$ON 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0085                   ??_main 0077  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCPR1L 0015  
                 _TMR2ON 0092                   _TRISD0 0440                   _TRISC2 043A  
                 _TRISD1 0441                   _TRISC6 043E                   _TRISC7 043F  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
  __end_of_PWM1_Set_Duty 00A6               __pmaintext 0014               __pintentry 0004  
                _T2CKPS0 0090                  _T2CKPS1 0091            ?_UART_RX_Init 0070  
                __ptext1 00A6                  __ptext2 0085                  __ptext3 00BA  
           __size_of_ISR 0012           ??_UART_RX_Init 0073     end_of_initialization 0010  
    start_initialization 000F              __end_of_ISR 00CC     __end_of_UART_RX_Init 00BA  
            __pbssCOMMON 0079                ___latbits 0002   __size_of_PWM1_Set_Duty 0021  
      interrupt_function 0004            _PWM1_Set_Duty 0085    __size_of_UART_RX_Init 0014  
         ?_PWM1_Set_Duty 0073             _UART_RX_Init 00A6            __size_of_main 0071  
               intlevel1 0000              _UART_Buffer 0079          ??_PWM1_Set_Duty 0075  
        PWM1_Set_Duty@DC 0073  
