

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 11 00:08:19 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	idataBANK0
   169  0721                     __pidataBANK0:	
   170                           
   171                           ;initializer for main@F851
   172  0721  34F6               	retlw	246
   173  0722  34FE               	retlw	254
   174  0723  34E0               	retlw	224
   175  0724  34BE               	retlw	190
   176  0725  34B6               	retlw	182
   177  0726  3466               	retlw	102
   178  0727  34F2               	retlw	242
   179  0728  34DA               	retlw	218
   180  0729  3460               	retlw	96
   181  072A  34FC               	retlw	252
   182  0007                     _PORTCbits	set	7
   183  0007                     _PORTC	set	7
   184  0006                     _PORTB	set	6
   185  0087                     _TRISC	set	135
   186  0086                     _TRISB	set	134
   187                           
   188                           ; #config settings
   189  0000                     
   190                           	psect	cinit
   191  07EE                     start_initialization:	
   192  07EE                     __initialization:	
   193                           
   194                           ; Initialize objects allocated to BANK0
   195  07EE  1383               	bcf	3,7	;select IRP bank0
   196  07EF  3035               	movlw	low (__pdataBANK0+10)
   197  07F0  00FD               	movwf	btemp+-1
   198  07F1  3007               	movlw	high __pidataBANK0
   199  07F2  00FE               	movwf	btemp
   200  07F3  3021               	movlw	low __pidataBANK0
   201  07F4  00FF               	movwf	btemp+1
   202  07F5  302B               	movlw	low __pdataBANK0
   203  07F6  0084               	movwf	4
   204  07F7  120A  118A  272F  120A  118A  	fcall	init_ram0
   205  07FC                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208  07FC                     __end_of__initialization:	
   209  07FC  0183               	clrf	3
   210  07FD  120A  118A  2F3E   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	dataBANK0
   213  002B                     __pdataBANK0:	
   214  002B                     main@F851:	
   215  002B                     	ds	10
   216                           
   217                           	psect	inittext
   218  072B                     init_fetch0:	
   219                           ;	Called with low address in FSR and high address in W
   220                           
   221  072B  087E               	movf	btemp,w
   222  072C  008A               	movwf	10
   223  072D  087F               	movf	btemp+1,w
   224  072E  0082               	movwf	2
   225  072F                     init_ram0:	
   226                           ;Called with:
   227                           ;	high address of idata address in btemp 
   228                           ;	low address of idata address in btemp+1 
   229                           ;	low address of data in FSR
   230                           ;	high address + 1 of data in btemp-1
   231                           
   232  072F  120A  118A  272B  120A  118A  	fcall	init_fetch0
   233  0734  0080               	movwf	0
   234  0735  0A84               	incf	4,f
   235  0736  0804               	movf	4,w
   236  0737  067D               	xorwf	btemp+-1,w
   237  0738  1903               	btfsc	3,2
   238  0739  3400               	retlw	0
   239  073A  0AFF               	incf	btemp+1,f
   240  073B  1903               	btfsc	3,2
   241  073C  0AFE               	incf	btemp,f
   242  073D  2F2F               	goto	init_ram0
   243                           
   244                           	psect	cstackCOMMON
   245  0070                     __pcstackCOMMON:	
   246  0070                     ?_main:	
   247  0070                     ??_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252  0070                     	ds	4
   253                           
   254                           	psect	cstackBANK0
   255  0020                     __pcstackBANK0:	
   256  0020                     main@segment_code:	
   257                           
   258                           ; 10 bytes @ 0x0
   259  0020                     	ds	10
   260  002A                     main@counter:	
   261                           
   262                           ; 1 bytes @ 0xA
   263  002A                     	ds	1
   264                           
   265                           	psect	maintext
   266  073E                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 12 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;  segment_code   10    0[BANK0 ] unsigned char [10]
   277 ;;  counter         1   10[BANK0 ] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0      11       0       0       0
   289 ;;      Temps:          4       0       0       0       0
   290 ;;      Totals:         4      11       0       0       0
   291 ;;Total ram usage:       15 bytes
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           
   300                           ;psect for function _main
   301  073E                     _main:	
   302  073E                     l698:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   305                           
   306                           
   307                           ;main.c: 13:      unsigned char segment_code[10] = {0xF6,0xFE,0xE0,0xBE,0xB6,0x66,0xF2,0
      +                          xDA,0x60,0xFC};
   308  073E  3020               	movlw	main@segment_code& (0+255)
   309  073F  0084               	movwf	4
   310  0740  302B               	movlw	low main@F851
   311  0741  00F0               	movwf	??_main
   312  0742  0804               	movf	4,w
   313  0743  00F1               	movwf	??_main+1
   314  0744  300A               	movlw	10
   315  0745  00F2               	movwf	??_main+2
   316  0746                     u60:	
   317  0746  0870               	movf	??_main,w
   318  0747  0084               	movwf	4
   319  0748  1383               	bcf	3,7	;select IRP bank0
   320  0749  0800               	movf	0,w
   321  074A  00F3               	movwf	??_main+3
   322  074B  0AF0               	incf	??_main,f
   323  074C  0871               	movf	??_main+1,w
   324  074D  0084               	movwf	4
   325  074E  0873               	movf	??_main+3,w
   326  074F  0080               	movwf	0
   327  0750  0AF1               	incf	??_main+1,f
   328  0751  0BF2               	decfsz	??_main+2,f
   329  0752  2F46               	goto	u60
   330  0753                     l700:	
   331                           
   332                           ;main.c: 15:     unsigned char counter=0;
   333  0753  1283               	bcf	3,5	;RP0=0, select bank0
   334  0754  1303               	bcf	3,6	;RP1=0, select bank0
   335  0755  01AA               	clrf	main@counter
   336  0756                     l702:	
   337                           
   338                           ;main.c: 16:     TRISB = 0x00;
   339  0756  1683               	bsf	3,5	;RP0=1, select bank1
   340  0757  1303               	bcf	3,6	;RP1=0, select bank1
   341  0758  0186               	clrf	6	;volatile
   342  0759                     l704:	
   343                           
   344                           ;main.c: 17:     PORTB = 0x00;
   345  0759  1283               	bcf	3,5	;RP0=0, select bank0
   346  075A  1303               	bcf	3,6	;RP1=0, select bank0
   347  075B  0186               	clrf	6	;volatile
   348  075C                     l706:	
   349                           
   350                           ;main.c: 18:     TRISC = 0x00;
   351  075C  1683               	bsf	3,5	;RP0=1, select bank1
   352  075D  1303               	bcf	3,6	;RP1=0, select bank1
   353  075E  0187               	clrf	7	;volatile
   354  075F                     l708:	
   355                           
   356                           ;main.c: 19:     PORTC = 0x00;
   357  075F  1283               	bcf	3,5	;RP0=0, select bank0
   358  0760  1303               	bcf	3,6	;RP1=0, select bank0
   359  0761  0187               	clrf	7	;volatile
   360  0762                     l20:	
   361                           
   362                           ;main.c: 23:             PORTCbits.RC1=1;
   363  0762  1487               	bsf	7,1	;volatile
   364  0763                     l714:	
   365                           
   366                           ;main.c: 24:           PORTB = segment_code[counter];
   367  0763  082A               	movf	main@counter,w
   368  0764  3E20               	addlw	(low (main@segment_code| 0))& (0+255)
   369  0765  0084               	movwf	4
   370  0766  1383               	bcf	3,7	;select IRP bank0
   371  0767  0800               	movf	0,w
   372  0768  0086               	movwf	6	;volatile
   373  0769                     l716:	
   374                           
   375                           ;main.c: 25:           _delay((unsigned long)((1000)*(4000000/4000.0)));
   376  0769  3006               	movlw	6
   377  076A  00F2               	movwf	??_main+2
   378  076B  3013               	movlw	19
   379  076C  00F1               	movwf	??_main+1
   380  076D  30AD               	movlw	173
   381  076E  00F0               	movwf	??_main
   382  076F                     u117:	
   383  076F  0BF0               	decfsz	??_main,f
   384  0770  2F6F               	goto	u117
   385  0771  0BF1               	decfsz	??_main+1,f
   386  0772  2F6F               	goto	u117
   387  0773  0BF2               	decfsz	??_main+2,f
   388  0774  2F6F               	goto	u117
   389  0775  2F76               	nop2
   390  0776                     l718:	
   391                           
   392                           ;main.c: 27:         }
   393  0776  3001               	movlw	1
   394  0777  00F0               	movwf	??_main
   395  0778  0870               	movf	??_main,w
   396  0779  1283               	bcf	3,5	;RP0=0, select bank0
   397  077A  1303               	bcf	3,6	;RP1=0, select bank0
   398  077B  07AA               	addwf	main@counter,f
   399  077C                     l720:	
   400  077C  300A               	movlw	10
   401  077D  022A               	subwf	main@counter,w
   402  077E  1C03               	skipc
   403  077F  2F81               	goto	u71
   404  0780  2F82               	goto	u70
   405  0781                     u71:	
   406  0781  2F62               	goto	l20
   407  0782                     u70:	
   408  0782                     l722:	
   409                           
   410                           ;main.c: 28:         counter=0;
   411  0782  01AA               	clrf	main@counter
   412  0783                     l724:	
   413                           
   414                           ;main.c: 29:         PORTCbits.RC1=0;
   415  0783  1087               	bcf	7,1	;volatile
   416  0784                     l22:	
   417                           
   418                           ;main.c: 31:             PORTCbits.RC2=1;
   419  0784  1507               	bsf	7,2	;volatile
   420  0785                     l730:	
   421                           
   422                           ;main.c: 32:           PORTB = segment_code[counter];
   423  0785  082A               	movf	main@counter,w
   424  0786  3E20               	addlw	(low (main@segment_code| 0))& (0+255)
   425  0787  0084               	movwf	4
   426  0788  1383               	bcf	3,7	;select IRP bank0
   427  0789  0800               	movf	0,w
   428  078A  0086               	movwf	6	;volatile
   429  078B                     l732:	
   430                           
   431                           ;main.c: 33:           _delay((unsigned long)((1000)*(4000000/4000.0)));
   432  078B  3006               	movlw	6
   433  078C  00F2               	movwf	??_main+2
   434  078D  3013               	movlw	19
   435  078E  00F1               	movwf	??_main+1
   436  078F  30AD               	movlw	173
   437  0790  00F0               	movwf	??_main
   438  0791                     u127:	
   439  0791  0BF0               	decfsz	??_main,f
   440  0792  2F91               	goto	u127
   441  0793  0BF1               	decfsz	??_main+1,f
   442  0794  2F91               	goto	u127
   443  0795  0BF2               	decfsz	??_main+2,f
   444  0796  2F91               	goto	u127
   445  0797  2F98               	nop2
   446  0798                     l734:	
   447                           
   448                           ;main.c: 35:         }
   449  0798  3001               	movlw	1
   450  0799  00F0               	movwf	??_main
   451  079A  0870               	movf	??_main,w
   452  079B  1283               	bcf	3,5	;RP0=0, select bank0
   453  079C  1303               	bcf	3,6	;RP1=0, select bank0
   454  079D  07AA               	addwf	main@counter,f
   455  079E                     l736:	
   456  079E  300A               	movlw	10
   457  079F  022A               	subwf	main@counter,w
   458  07A0  1C03               	skipc
   459  07A1  2FA3               	goto	u81
   460  07A2  2FA4               	goto	u80
   461  07A3                     u81:	
   462  07A3  2F84               	goto	l22
   463  07A4                     u80:	
   464  07A4                     l738:	
   465                           
   466                           ;main.c: 36:          counter=0;
   467  07A4  01AA               	clrf	main@counter
   468  07A5                     l740:	
   469                           
   470                           ;main.c: 37:         PORTCbits.RC2=0;
   471  07A5  1107               	bcf	7,2	;volatile
   472  07A6                     l24:	
   473                           
   474                           ;main.c: 39:             PORTCbits.RC3=1;
   475  07A6  1587               	bsf	7,3	;volatile
   476  07A7                     l746:	
   477                           
   478                           ;main.c: 40:           PORTB = segment_code[counter];
   479  07A7  082A               	movf	main@counter,w
   480  07A8  3E20               	addlw	(low (main@segment_code| 0))& (0+255)
   481  07A9  0084               	movwf	4
   482  07AA  1383               	bcf	3,7	;select IRP bank0
   483  07AB  0800               	movf	0,w
   484  07AC  0086               	movwf	6	;volatile
   485  07AD                     l748:	
   486                           
   487                           ;main.c: 41:           _delay((unsigned long)((1000)*(4000000/4000.0)));
   488  07AD  3006               	movlw	6
   489  07AE  00F2               	movwf	??_main+2
   490  07AF  3013               	movlw	19
   491  07B0  00F1               	movwf	??_main+1
   492  07B1  30AD               	movlw	173
   493  07B2  00F0               	movwf	??_main
   494  07B3                     u137:	
   495  07B3  0BF0               	decfsz	??_main,f
   496  07B4  2FB3               	goto	u137
   497  07B5  0BF1               	decfsz	??_main+1,f
   498  07B6  2FB3               	goto	u137
   499  07B7  0BF2               	decfsz	??_main+2,f
   500  07B8  2FB3               	goto	u137
   501  07B9  2FBA               	nop2
   502  07BA                     l750:	
   503                           
   504                           ;main.c: 43:         }
   505  07BA  3001               	movlw	1
   506  07BB  00F0               	movwf	??_main
   507  07BC  0870               	movf	??_main,w
   508  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   509  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   510  07BF  07AA               	addwf	main@counter,f
   511  07C0                     l752:	
   512  07C0  300A               	movlw	10
   513  07C1  022A               	subwf	main@counter,w
   514  07C2  1C03               	skipc
   515  07C3  2FC5               	goto	u91
   516  07C4  2FC6               	goto	u90
   517  07C5                     u91:	
   518  07C5  2FA6               	goto	l24
   519  07C6                     u90:	
   520  07C6                     l754:	
   521                           
   522                           ;main.c: 44:           counter=0;
   523  07C6  01AA               	clrf	main@counter
   524  07C7                     l756:	
   525                           
   526                           ;main.c: 45:         PORTCbits.RC3=0;
   527  07C7  1187               	bcf	7,3	;volatile
   528  07C8                     l26:	
   529                           
   530                           ;main.c: 47:             PORTCbits.RC2=1;
   531  07C8  1507               	bsf	7,2	;volatile
   532  07C9                     l762:	
   533                           
   534                           ;main.c: 48:           PORTB = segment_code[counter];
   535  07C9  082A               	movf	main@counter,w
   536  07CA  3E20               	addlw	(low (main@segment_code| 0))& (0+255)
   537  07CB  0084               	movwf	4
   538  07CC  1383               	bcf	3,7	;select IRP bank0
   539  07CD  0800               	movf	0,w
   540  07CE  0086               	movwf	6	;volatile
   541  07CF                     l764:	
   542                           
   543                           ;main.c: 49:           _delay((unsigned long)((1000)*(4000000/4000.0)));
   544  07CF  3006               	movlw	6
   545  07D0  00F2               	movwf	??_main+2
   546  07D1  3013               	movlw	19
   547  07D2  00F1               	movwf	??_main+1
   548  07D3  30AD               	movlw	173
   549  07D4  00F0               	movwf	??_main
   550  07D5                     u147:	
   551  07D5  0BF0               	decfsz	??_main,f
   552  07D6  2FD5               	goto	u147
   553  07D7  0BF1               	decfsz	??_main+1,f
   554  07D8  2FD5               	goto	u147
   555  07D9  0BF2               	decfsz	??_main+2,f
   556  07DA  2FD5               	goto	u147
   557  07DB  2FDC               	nop2
   558  07DC                     l766:	
   559                           
   560                           ;main.c: 51:         }
   561  07DC  3001               	movlw	1
   562  07DD  00F0               	movwf	??_main
   563  07DE  0870               	movf	??_main,w
   564  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   565  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   566  07E1  07AA               	addwf	main@counter,f
   567  07E2                     l768:	
   568  07E2  300A               	movlw	10
   569  07E3  022A               	subwf	main@counter,w
   570  07E4  1C03               	skipc
   571  07E5  2FE7               	goto	u101
   572  07E6  2FE8               	goto	u100
   573  07E7                     u101:	
   574  07E7  2FC8               	goto	l26
   575  07E8                     u100:	
   576  07E8                     l770:	
   577                           
   578                           ;main.c: 52:          counter=0;
   579  07E8  01AA               	clrf	main@counter
   580  07E9                     l772:	
   581                           
   582                           ;main.c: 53:         PORTCbits.RC2=0;
   583  07E9  1107               	bcf	7,2	;volatile
   584  07EA  2F62               	goto	l20
   585  07EB  120A  118A  2800   	ljmp	start
   586  07EE                     __end_of_main:	
   587  007E                     btemp	set	126	;btemp
   588  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0     366
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 11 00:08:19 2019

                      pc 0002              __CFG_CP$OFF 0000                       l20 0762  
                     l22 0784                       l24 07A6                       l26 07C8  
                     u60 0746                       u70 0782                       u71 0781  
                     u80 07A4                       u81 07A3                       u90 07C6  
                     u91 07C5                       fsr 0004                      l700 0753  
                    l702 0756                      l720 077C                      l704 0759  
                    l730 0785                      l722 0782                      l714 0763  
                    l706 075C                      l740 07A5                      l732 078B  
                    l724 0783                      l716 0769                      l708 075F  
                    l750 07BA                      l734 0798                      l718 0776  
                    l752 07C0                      l736 079E                      l770 07E8  
                    l762 07C9                      l754 07C6                      l746 07A7  
                    l738 07A4                      l772 07E9                      l764 07CF  
                    l756 07C7                      l748 07AD                      l766 07DC  
                    l768 07E2                      l698 073E                      u100 07E8  
                    u101 07E7                      u117 076F                      u127 0791  
                    u137 07B3                      u147 07D5             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             __CFG_FOSC$XT 0000  
           __CFG_LVP$OFF 0000              main@counter 002A             __CFG_WRT$OFF 0000  
                   _main 073E                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087            __CFG_PWRTE$ON 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0721               __pmaintext 073E  
   end_of_initialization 07FC                _PORTCbits 0007      start_initialization 07EE  
             init_fetch0 072B              __pdataBANK0 002B                ___latbits 0002  
          __pcstackBANK0 0020         main@segment_code 0020            __size_of_main 00B0  
               main@F851 002B                 init_ram0 072F  
