

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 23 19:58:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171  0736                     __pidataBANK0:	
   172                           
   173                           ;initializer for main@F883
   174  0736  34FC               	retlw	252
   175  0737  3460               	retlw	96
   176  0738  34DA               	retlw	218
   177  0739  34F2               	retlw	242
   178  073A  3466               	retlw	102
   179  073B  34B6               	retlw	182
   180  073C  34BE               	retlw	190
   181  073D  34E0               	retlw	224
   182  073E  34FE               	retlw	254
   183  073F  34F6               	retlw	246
   184  0019                     _TXREG	set	25
   185  0008                     _PORTD	set	8
   186  0006                     _PORTB	set	6
   187  00C7                     _SPEN	set	199
   188  0047                     _RD7	set	71
   189  0046                     _RD6	set	70
   190  0045                     _RD5	set	69
   191  0099                     _SPBRG	set	153
   192  0088                     _TRISD	set	136
   193  0086                     _TRISB	set	134
   194  04C1                     _TRMT	set	1217
   195  04C5                     _TXEN	set	1221
   196  043F                     _TRISC7	set	1087
   197  043E                     _TRISC6	set	1086
   198  04C4                     _SYNC	set	1220
   199  04C2                     _BRGH	set	1218
   200                           
   201                           ; #config settings
   202  0000                     
   203                           	psect	cinit
   204  07EE                     start_initialization:	
   205  07EE                     __initialization:	
   206                           
   207                           ; Initialize objects allocated to BANK0
   208  07EE  1383               	bcf	3,7	;select IRP bank0
   209  07EF  3035               	movlw	low (__pdataBANK0+10)
   210  07F0  00FD               	movwf	btemp+-1
   211  07F1  3007               	movlw	high __pidataBANK0
   212  07F2  00FE               	movwf	btemp
   213  07F3  3036               	movlw	low __pidataBANK0
   214  07F4  00FF               	movwf	btemp+1
   215  07F5  302B               	movlw	low __pdataBANK0
   216  07F6  0084               	movwf	4
   217  07F7  120A  118A  275F  120A  118A  	fcall	init_ram0
   218  07FC                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221  07FC                     __end_of__initialization:	
   222  07FC  0183               	clrf	3
   223  07FD  120A  118A  2F6E   	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	dataBANK0
   226  002B                     __pdataBANK0:	
   227  002B                     main@F883:	
   228  002B                     	ds	10
   229                           
   230                           	psect	inittext
   231  075B                     init_fetch0:	
   232                           ;	Called with low address in FSR and high address in W
   233                           
   234  075B  087E               	movf	btemp,w
   235  075C  008A               	movwf	10
   236  075D  087F               	movf	btemp+1,w
   237  075E  0082               	movwf	2
   238  075F                     init_ram0:	
   239                           ;Called with:
   240                           ;	high address of idata address in btemp 
   241                           ;	low address of idata address in btemp+1 
   242                           ;	low address of data in FSR
   243                           ;	high address + 1 of data in btemp-1
   244                           
   245  075F  120A  118A  275B  120A  118A  	fcall	init_fetch0
   246  0764  0080               	movwf	0
   247  0765  0A84               	incf	4,f
   248  0766  0804               	movf	4,w
   249  0767  067D               	xorwf	btemp+-1,w
   250  0768  1903               	btfsc	3,2
   251  0769  3400               	retlw	0
   252  076A  0AFF               	incf	btemp+1,f
   253  076B  1903               	btfsc	3,2
   254  076C  0AFE               	incf	btemp,f
   255  076D  2F5F               	goto	init_ram0
   256                           
   257                           	psect	cstackCOMMON
   258  0070                     __pcstackCOMMON:	
   259  0070                     ?_UART_TX_Init:	
   260  0070                     ??_UART_TX_Init:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_UART_Write:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ??_UART_Write:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_main:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     UART_Write@data:	
   273                           ; 1 bytes @ 0x0
   274                           
   275                           
   276                           ; 1 bytes @ 0x0
   277  0070                     	ds	1
   278  0071                     ??_main:	
   279                           
   280                           ; 1 bytes @ 0x1
   281  0071                     	ds	4
   282                           
   283                           	psect	cstackBANK0
   284  0020                     __pcstackBANK0:	
   285  0020                     main@segment_code:	
   286                           
   287                           ; 10 bytes @ 0x0
   288  0020                     	ds	10
   289  002A                     main@Data:	
   290                           
   291                           ; 1 bytes @ 0xA
   292  002A                     	ds	1
   293                           
   294                           	psect	maintext
   295  076E                     __pmaintext:	
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 25 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  segment_code   10    0[BANK0 ] unsigned char [10]
   306 ;;  Data            1   10[BANK0 ] unsigned char 
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : B00/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0      11       0       0       0
   318 ;;      Temps:          4       0       0       0       0
   319 ;;      Totals:         4      11       0       0       0
   320 ;;Total ram usage:       15 bytes
   321 ;; Hardware stack levels required when called:    1
   322 ;; This function calls:
   323 ;;		_UART_TX_Init
   324 ;;		_UART_Write
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330                           
   331                           ;psect for function _main
   332  076E                     _main:	
   333  076E                     l727:	
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   336                           
   337                           
   338                           ;main.c: 26:     UART_TX_Init();
   339  076E  120A  118A  274C  120A  118A  	fcall	_UART_TX_Init
   340  0773                     l729:	
   341                           
   342                           ;main.c: 27:      uint8_t Data = 0;
   343  0773  1283               	bcf	3,5	;RP0=0, select bank0
   344  0774  1303               	bcf	3,6	;RP1=0, select bank0
   345  0775  01AA               	clrf	main@Data
   346  0776                     l731:	
   347                           
   348                           ;main.c: 28:      unsigned char segment_code[10] = {0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0
      +                          xE0,0xFE,0xF6};
   349  0776  3020               	movlw	main@segment_code& (0+255)
   350  0777  0084               	movwf	4
   351  0778  302B               	movlw	low main@F883
   352  0779  00F1               	movwf	??_main
   353  077A  0804               	movf	4,w
   354  077B  00F2               	movwf	??_main+1
   355  077C  300A               	movlw	10
   356  077D  00F3               	movwf	??_main+2
   357  077E                     u80:	
   358  077E  0871               	movf	??_main,w
   359  077F  0084               	movwf	4
   360  0780  1383               	bcf	3,7	;select IRP bank0
   361  0781  0800               	movf	0,w
   362  0782  00F4               	movwf	??_main+3
   363  0783  0AF1               	incf	??_main,f
   364  0784  0872               	movf	??_main+1,w
   365  0785  0084               	movwf	4
   366  0786  0874               	movf	??_main+3,w
   367  0787  0080               	movwf	0
   368  0788  0AF2               	incf	??_main+1,f
   369  0789  0BF3               	decfsz	??_main+2,f
   370  078A  2F7E               	goto	u80
   371  078B                     l733:	
   372                           
   373                           ;main.c: 29:      TRISB = 0x00;
   374  078B  1683               	bsf	3,5	;RP0=1, select bank1
   375  078C  1303               	bcf	3,6	;RP1=0, select bank1
   376  078D  0186               	clrf	6	;volatile
   377  078E                     l735:	
   378                           
   379                           ;main.c: 30:     PORTB = 0x00;
   380  078E  1283               	bcf	3,5	;RP0=0, select bank0
   381  078F  1303               	bcf	3,6	;RP1=0, select bank0
   382  0790  0186               	clrf	6	;volatile
   383  0791                     l737:	
   384                           
   385                           ;main.c: 31:      TRISD = 1;
   386  0791  3001               	movlw	1
   387  0792  1683               	bsf	3,5	;RP0=1, select bank1
   388  0793  1303               	bcf	3,6	;RP1=0, select bank1
   389  0794  0088               	movwf	8	;volatile
   390  0795                     l739:	
   391                           
   392                           ;main.c: 32:      PORTD = 0;
   393  0795  1283               	bcf	3,5	;RP0=0, select bank0
   394  0796  1303               	bcf	3,6	;RP1=0, select bank0
   395  0797  0188               	clrf	8	;volatile
   396  0798                     l741:	
   397                           
   398                           ;main.c: 36:         if (Data > 9){
   399  0798  300A               	movlw	10
   400  0799  022A               	subwf	main@Data,w
   401  079A  1C03               	skipc
   402  079B  2F9D               	goto	u91
   403  079C  2F9E               	goto	u90
   404  079D                     u91:	
   405  079D  2F9F               	goto	l745
   406  079E                     u90:	
   407  079E                     l743:	
   408                           
   409                           ;main.c: 37:             Data=0;
   410  079E  01AA               	clrf	main@Data
   411  079F                     l745:	
   412                           
   413                           ;main.c: 39:      if (RD5)
   414  079F  1E88               	btfss	8,5	;volatile
   415  07A0  2FA2               	goto	u101
   416  07A1  2FA3               	goto	u100
   417  07A2                     u101:	
   418  07A2  2FB4               	goto	l751
   419  07A3                     u100:	
   420  07A3                     l747:	
   421                           
   422                           ;main.c: 40:     {;main.c: 41:       Data++;
   423  07A3  3001               	movlw	1
   424  07A4  00F1               	movwf	??_main
   425  07A5  0871               	movf	??_main,w
   426  07A6  07AA               	addwf	main@Data,f
   427  07A7                     l749:	
   428                           
   429                           ;main.c: 42:       _delay((unsigned long)((500)*(4000000/4000.0)));
   430  07A7  3003               	movlw	3
   431  07A8  00F3               	movwf	??_main+2
   432  07A9  308A               	movlw	138
   433  07AA  00F2               	movwf	??_main+1
   434  07AB  3055               	movlw	85
   435  07AC  00F1               	movwf	??_main
   436  07AD                     u137:	
   437  07AD  0BF1               	decfsz	??_main,f
   438  07AE  2FAD               	goto	u137
   439  07AF  0BF2               	decfsz	??_main+1,f
   440  07B0  2FAD               	goto	u137
   441  07B1  0BF3               	decfsz	??_main+2,f
   442  07B2  2FAD               	goto	u137
   443  07B3  2FB4               	nop2
   444  07B4                     l751:	
   445                           
   446                           ;main.c: 44:     if (RD6)
   447  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   448  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   449  07B6  1F08               	btfss	8,6	;volatile
   450  07B7  2FB9               	goto	u111
   451  07B8  2FBA               	goto	u110
   452  07B9                     u111:	
   453  07B9  2FC9               	goto	l757
   454  07BA                     u110:	
   455  07BA                     l753:	
   456                           
   457                           ;main.c: 45:     {;main.c: 46:       Data--;
   458  07BA  3001               	movlw	1
   459  07BB  02AA               	subwf	main@Data,f
   460  07BC                     l755:	
   461                           
   462                           ;main.c: 47:       _delay((unsigned long)((500)*(4000000/4000.0)));
   463  07BC  3003               	movlw	3
   464  07BD  00F3               	movwf	??_main+2
   465  07BE  308A               	movlw	138
   466  07BF  00F2               	movwf	??_main+1
   467  07C0  3055               	movlw	85
   468  07C1  00F1               	movwf	??_main
   469  07C2                     u147:	
   470  07C2  0BF1               	decfsz	??_main,f
   471  07C3  2FC2               	goto	u147
   472  07C4  0BF2               	decfsz	??_main+1,f
   473  07C5  2FC2               	goto	u147
   474  07C6  0BF3               	decfsz	??_main+2,f
   475  07C7  2FC2               	goto	u147
   476  07C8  2FC9               	nop2
   477  07C9                     l757:	
   478                           
   479                           ;main.c: 49:     if (RD7)
   480  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   481  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   482  07CB  1F88               	btfss	8,7	;volatile
   483  07CC  2FCE               	goto	u121
   484  07CD  2FCF               	goto	u120
   485  07CE                     u121:	
   486  07CE  2FE2               	goto	l763
   487  07CF                     u120:	
   488  07CF                     l759:	
   489                           
   490                           ;main.c: 50:     {;main.c: 51:       UART_Write(Data);
   491  07CF  082A               	movf	main@Data,w
   492  07D0  120A  118A  2740  120A  118A  	fcall	_UART_Write
   493  07D5                     l761:	
   494                           
   495                           ;main.c: 52:       _delay((unsigned long)((500)*(4000000/4000.0)));
   496  07D5  3003               	movlw	3
   497  07D6  00F3               	movwf	??_main+2
   498  07D7  308A               	movlw	138
   499  07D8  00F2               	movwf	??_main+1
   500  07D9  3055               	movlw	85
   501  07DA  00F1               	movwf	??_main
   502  07DB                     u157:	
   503  07DB  0BF1               	decfsz	??_main,f
   504  07DC  2FDB               	goto	u157
   505  07DD  0BF2               	decfsz	??_main+1,f
   506  07DE  2FDB               	goto	u157
   507  07DF  0BF3               	decfsz	??_main+2,f
   508  07E0  2FDB               	goto	u157
   509  07E1  2FE2               	nop2
   510  07E2                     l763:	
   511                           
   512                           ;main.c: 54:     PORTB= segment_code[Data];
   513  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   514  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   515  07E4  082A               	movf	main@Data,w
   516  07E5  3E20               	addlw	(low (main@segment_code| 0))& (0+255)
   517  07E6  0084               	movwf	4
   518  07E7  1383               	bcf	3,7	;select IRP bank0
   519  07E8  0800               	movf	0,w
   520  07E9  0086               	movwf	6	;volatile
   521  07EA  2F98               	goto	l741
   522  07EB  120A  118A  2800   	ljmp	start
   523  07EE                     __end_of_main:	
   524                           
   525                           	psect	text1
   526  0740                     __ptext1:	
   527 ;; *************** function _UART_Write *****************
   528 ;; Defined at:
   529 ;;		line 76 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  data            1    wreg     unsigned char 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  data            1    0[COMMON] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         1       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0
   546 ;;      Totals:         1       0       0       0       0
   547 ;;Total ram usage:        1 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _UART_Write
   558  0740                     _UART_Write:	
   559                           
   560                           ;incstack = 0
   561                           ; Regs used in _UART_Write: [wreg]
   562                           ;UART_Write@data stored from wreg
   563  0740  00F0               	movwf	UART_Write@data
   564  0741                     l723:	
   565  0741                     l58:	
   566                           ;main.c: 76: void UART_Write(uint8_t data);main.c: 77: {;main.c: 78:   while(!TRMT);
   567                           
   568  0741  1683               	bsf	3,5	;RP0=1, select bank1
   569  0742  1303               	bcf	3,6	;RP1=0, select bank1
   570  0743  1C98               	btfss	24,1	;volatile
   571  0744  2F46               	goto	u71
   572  0745  2F47               	goto	u70
   573  0746                     u71:	
   574  0746  2F41               	goto	l58
   575  0747                     u70:	
   576  0747                     l725:	
   577                           
   578                           ;main.c: 79:   TXREG = data;
   579  0747  0870               	movf	UART_Write@data,w
   580  0748  1283               	bcf	3,5	;RP0=0, select bank0
   581  0749  1303               	bcf	3,6	;RP1=0, select bank0
   582  074A  0099               	movwf	25	;volatile
   583  074B                     l61:	
   584  074B  0008               	return
   585  074C                     __end_of_UART_Write:	
   586                           
   587                           	psect	text2
   588  074C                     __ptext2:	
   589 ;; *************** function _UART_TX_Init *****************
   590 ;; Defined at:
   591 ;;		line 61 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0
   608 ;;      Totals:         0       0       0       0       0
   609 ;;Total ram usage:        0 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _UART_TX_Init
   620  074C                     _UART_TX_Init:	
   621  074C                     l709:	
   622                           ;incstack = 0
   623                           ; Regs used in _UART_TX_Init: [wreg]
   624                           
   625                           
   626                           ;main.c: 62:     BRGH=1;
   627  074C  1683               	bsf	3,5	;RP0=1, select bank1
   628  074D  1303               	bcf	3,6	;RP1=0, select bank1
   629  074E  1518               	bsf	24,2	;volatile
   630  074F                     l711:	
   631                           
   632                           ;main.c: 65:     SPBRG =25;
   633  074F  3019               	movlw	25
   634  0750  0099               	movwf	25	;volatile
   635  0751                     l713:	
   636                           
   637                           ;main.c: 68:     SYNC =0;
   638  0751  1218               	bcf	24,4	;volatile
   639  0752                     l715:	
   640                           
   641                           ;main.c: 69:     SPEN =1;
   642  0752  1283               	bcf	3,5	;RP0=0, select bank0
   643  0753  1303               	bcf	3,6	;RP1=0, select bank0
   644  0754  1798               	bsf	24,7	;volatile
   645  0755                     l717:	
   646                           
   647                           ;main.c: 72:     TRISC6 = 1;
   648  0755  1683               	bsf	3,5	;RP0=1, select bank1
   649  0756  1303               	bcf	3,6	;RP1=0, select bank1
   650  0757  1707               	bsf	7,6	;volatile
   651  0758                     l719:	
   652                           
   653                           ;main.c: 73:     TRISC7 = 1;
   654  0758  1787               	bsf	7,7	;volatile
   655  0759                     l721:	
   656                           
   657                           ;main.c: 74:     TXEN = 1;
   658  0759  1698               	bsf	24,5	;volatile
   659  075A                     l55:	
   660  075A  0008               	return
   661  075B                     __end_of_UART_TX_Init:	
   662  007E                     btemp	set	126	;btemp
   663  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0     116
                                              1 COMMON     4     4      0
                                              0 BANK0     11    11      0
                       _UART_TX_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TX_Init
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 23 19:58:11 2019

                      pc 0002              __CFG_CP$OFF 0000                       l61 074B  
                     l55 075A                       l58 0741                       u70 0747  
                     u71 0746                       u80 077E                       u90 079E  
                     u91 079D                       fsr 0004                      l711 074F  
                    l721 0759                      l713 0751                      l715 0752  
                    l723 0741                      l731 0776                      l717 0755  
                    l709 074C                      l725 0747                      l741 0798  
                    l733 078B                      l719 0758                      l751 07B4  
                    l743 079E                      l735 078E                      l727 076E  
                    l761 07D5                      l753 07BA                      l745 079F  
                    l737 0791                      l729 0773                      l763 07E2  
                    l755 07BC                      l747 07A3                      l739 0795  
                    l757 07C9                      l749 07A7                      l759 07CF  
                    u100 07A3                      u101 07A2                      _RD5 0045  
                    u110 07BA                      _RD6 0046                      u111 07B9  
                    _RD7 0047                      u120 07CF                      u121 07CE  
                    u137 07AD                      u147 07C2                      u157 07DB  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     _BRGH 04C2  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4             __CFG_WRT$OFF 0000                     _main 076E  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019            __CFG_PWRTE$ON 0000  
            ?_UART_Write 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0071                   _TRISC6 043E                   _TRISC7 043F  
    __size_of_UART_Write 000C  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0736               __pmaintext 076E             ??_UART_Write 0070  
          ?_UART_TX_Init 0070       __end_of_UART_Write 074C                  __ptext1 0740  
                __ptext2 074C           ??_UART_TX_Init 0070     end_of_initialization 07FC  
         UART_Write@data 0070      start_initialization 07EE               init_fetch0 075B  
   __end_of_UART_TX_Init 075B              __pdataBANK0 002B                ___latbits 0002  
          __pcstackBANK0 0020         main@segment_code 0020    __size_of_UART_TX_Init 000F  
           _UART_TX_Init 074C            __size_of_main 0080                 main@F883 002B  
               main@Data 002A                 init_ram0 075F               _UART_Write 0740  
